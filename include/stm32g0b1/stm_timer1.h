/**
 * @file
 * @version 1.6
 * @brief Register access structs for UNK TIM1
 *
 * Advanced-timers
 *
 * @note This file is autogenerated using pysvd 0.2.3
 */

#ifndef STM_TIMER1_H_
#define STM_TIMER1_H_

#ifdef __cplusplus
extern "C" {
#endif

#include "static_assert.h"

#include <stdint.h>

typedef union {
    struct {
        uint32_t       cen : 1;
        uint32_t       udis : 1;
        uint32_t       urs : 1;
        uint32_t       opm : 1;
        uint32_t       dir : 1;
        uint32_t       cms : 2;
        uint32_t       arpe : 1;
        uint32_t       ckd : 2;
        uint32_t const reserved_10 : 1;
        uint32_t       uifremap : 1;
        uint32_t const reserved_12 : 20;
    };
    uint32_t bits;
} TIM1_cr1_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_cr1_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       ccpc : 1;
        uint32_t const reserved_01 : 1;
        uint32_t       ccus : 1;
        uint32_t       ccds : 1;
        uint32_t       mms : 3;
        uint32_t       ti1s : 1;
        uint32_t       ois1 : 1;
        uint32_t       ois1n : 1;
        uint32_t       ois2 : 1;
        uint32_t       ois2n : 1;
        uint32_t       ois3 : 1;
        uint32_t       ois3n : 1;
        uint32_t       ois4 : 1;
        uint32_t const reserved_15 : 1;
        uint32_t       ois5 : 1;
        uint32_t const reserved_17 : 1;
        uint32_t       ois6 : 1;
        uint32_t const reserved_19 : 1;
        uint32_t       mms2 : 4;
        uint32_t const reserved_24 : 8;
    };
    uint32_t bits;
} TIM1_cr2_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_cr2_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       sms1 : 3;
        uint32_t       occs : 1;
        uint32_t       ts1 : 3;
        uint32_t       msm : 1;
        uint32_t       etf : 4;
        uint32_t       etps : 2;
        uint32_t       ece : 1;
        uint32_t       etp : 1;
        uint32_t       sms2 : 1;
        uint32_t const reserved_17 : 3;
        uint32_t       ts2 : 2;
        uint32_t const reserved_22 : 10;
    };
    uint32_t bits;
} TIM1_smcr_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_smcr_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       uie : 1;
        uint32_t       cc1ie : 1;
        uint32_t       cc2ie : 1;
        uint32_t       cc3ie : 1;
        uint32_t       cc4ie : 1;
        uint32_t       comie : 1;
        uint32_t       tie : 1;
        uint32_t       bie : 1;
        uint32_t       ude : 1;
        uint32_t       cc1de : 1;
        uint32_t       cc2de : 1;
        uint32_t       cc3de : 1;
        uint32_t       cc4de : 1;
        uint32_t       comde : 1;
        uint32_t       tde : 1;
        uint32_t const reserved_15 : 17;
    };
    uint32_t bits;
} TIM1_dier_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_dier_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       uif : 1;
        uint32_t       cc1if : 1;
        uint32_t       cc2if : 1;
        uint32_t       cc3if : 1;
        uint32_t       cc4if : 1;
        uint32_t       comif : 1;
        uint32_t       tif : 1;
        uint32_t       bif : 1;
        uint32_t       b2if : 1;
        uint32_t       cc1of : 1;
        uint32_t       cc2of : 1;
        uint32_t       cc3of : 1;
        uint32_t       cc4of : 1;
        uint32_t       sbif : 1;
        uint32_t const reserved_14 : 2;
        uint32_t       cc5if : 1;
        uint32_t       cc6if : 1;
        uint32_t const reserved_18 : 14;
    };
    uint32_t bits;
} TIM1_sr_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_sr_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       ug : 1;
        uint32_t       cc1g : 1;
        uint32_t       cc2g : 1;
        uint32_t       cc3g : 1;
        uint32_t       cc4g : 1;
        uint32_t       comg : 1;
        uint32_t       tg : 1;
        uint32_t       bg : 1;
        uint32_t       b2g : 1;
        uint32_t const reserved_09 : 23;
    };
    uint32_t bits;
} TIM1_egr_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_egr_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       cc1s : 2;
        uint32_t       oc1fe : 1;
        uint32_t       oc1pe : 1;
        uint32_t       oc1m1 : 3;
        uint32_t       oc1ce : 1;
        uint32_t       cc2s : 2;
        uint32_t       oc2fe : 1;
        uint32_t       oc2pe : 1;
        uint32_t       oc2m1 : 3;
        uint32_t       oc2ce : 1;
        uint32_t       oc1m2 : 1;
        uint32_t const reserved_17 : 7;
        uint32_t       oc2m2 : 1;
        uint32_t const reserved_25 : 7;
    };
    uint32_t bits;
} TIM1_ccmr1_output_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccmr1_output_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       cc1s : 2;
        uint32_t       ic1psc : 2;
        uint32_t       ic1f : 4;
        uint32_t       cc2s : 2;
        uint32_t       ic2psc : 2;
        uint32_t       ic2f : 4;
        uint32_t const reserved_16 : 16;
    };
    uint32_t bits;
} TIM1_ccmr1_input_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccmr1_input_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       cc3s : 2;
        uint32_t       oc3fe : 1;
        uint32_t       oc3pe : 1;
        uint32_t       oc3m1 : 3;
        uint32_t       oc3ce : 1;
        uint32_t       cc4s : 2;
        uint32_t       oc4fe : 1;
        uint32_t       oc4pe : 1;
        uint32_t       oc4m1 : 3;
        uint32_t       oc4ce : 1;
        uint32_t       oc3m2 : 1;
        uint32_t const reserved_17 : 7;
        uint32_t       oc4m2 : 1;
        uint32_t const reserved_25 : 7;
    };
    uint32_t bits;
} TIM1_ccmr2_output_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccmr2_output_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       cc3s : 2;
        uint32_t       ic3psc : 2;
        uint32_t       ic3f : 4;
        uint32_t       cc4s : 2;
        uint32_t       ic4psc : 2;
        uint32_t       ic4f : 4;
        uint32_t const reserved_16 : 16;
    };
    uint32_t bits;
} TIM1_ccmr2_input_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccmr2_input_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       cc1e : 1;
        uint32_t       cc1p : 1;
        uint32_t       cc1ne : 1;
        uint32_t       cc1np : 1;
        uint32_t       cc2e : 1;
        uint32_t       cc2p : 1;
        uint32_t       cc2ne : 1;
        uint32_t       cc2np : 1;
        uint32_t       cc3e : 1;
        uint32_t       cc3p : 1;
        uint32_t       cc3ne : 1;
        uint32_t       cc3np : 1;
        uint32_t       cc4e : 1;
        uint32_t       cc4p : 1;
        uint32_t const reserved_14 : 1;
        uint32_t       cc4np : 1;
        uint32_t       cc5e : 1;
        uint32_t       cc5p : 1;
        uint32_t const reserved_18 : 2;
        uint32_t       cc6e : 1;
        uint32_t       cc6p : 1;
        uint32_t const reserved_22 : 10;
    };
    uint32_t bits;
} TIM1_ccer_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccer_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       cnt : 16;
        uint32_t const reserved_16 : 15;
        uint32_t const uifcpy : 1;
    };
    uint32_t bits;
} TIM1_cnt_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_cnt_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       psc : 16;
        uint32_t const reserved_16 : 16;
    };
    uint32_t bits;
} TIM1_psc_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_psc_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       arr : 16;
        uint32_t const reserved_16 : 16;
    };
    uint32_t bits;
} TIM1_arr_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_arr_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       rep : 16;
        uint32_t const reserved_16 : 16;
    };
    uint32_t bits;
} TIM1_rcr_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_rcr_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       ccr1 : 16;
        uint32_t const reserved_16 : 16;
    };
    uint32_t bits;
} TIM1_ccr1_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccr1_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       ccr2 : 16;
        uint32_t const reserved_16 : 16;
    };
    uint32_t bits;
} TIM1_ccr2_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccr2_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       ccr3 : 16;
        uint32_t const reserved_16 : 16;
    };
    uint32_t bits;
} TIM1_ccr3_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccr3_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       ccr4 : 16;
        uint32_t const reserved_16 : 16;
    };
    uint32_t bits;
} TIM1_ccr4_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccr4_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       dtg : 8;
        uint32_t       lock : 2;
        uint32_t       ossi : 1;
        uint32_t       ossr : 1;
        uint32_t       bke : 1;
        uint32_t       bkp : 1;
        uint32_t       aoe : 1;
        uint32_t       moe : 1;
        uint32_t       bkf : 4;
        uint32_t       bk2f : 4;
        uint32_t       bk2e : 1;
        uint32_t       bk2p : 1;
        uint32_t       bkdsrm : 1;
        uint32_t       bk2dsrm : 1;
        uint32_t       bkbid : 1;
        uint32_t       bk2bid : 1;
        uint32_t const reserved_30 : 2;
    };
    uint32_t bits;
} TIM1_bdtr_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_bdtr_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       dba : 5;
        uint32_t const reserved_05 : 3;
        uint32_t       dbl : 5;
        uint32_t const reserved_13 : 19;
    };
    uint32_t bits;
} TIM1_dcr_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_dcr_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t dmab : 32;
    };
    uint32_t bits;
} TIM1_dmar_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_dmar_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       ocref_clr : 1;
        uint32_t const reserved_01 : 31;
    };
    uint32_t bits;
} TIM1_or1_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_or1_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t const reserved_00 : 2;
        uint32_t       oc5fe : 1;
        uint32_t       oc5pe : 1;
        uint32_t       oc5m : 3;
        uint32_t       oc5ce : 1;
        uint32_t const reserved_08 : 2;
        uint32_t       oc6fe : 1;
        uint32_t       oc6pe : 1;
        uint32_t       oc6m : 3;
        uint32_t       oc6ce : 1;
        uint32_t       oc5m_bit3 : 1;
        uint32_t const reserved_17 : 7;
        uint32_t       oc6m_bit3 : 1;
        uint32_t const reserved_25 : 7;
    };
    uint32_t bits;
} TIM1_ccmr3_output_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccmr3_output_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       ccr5 : 16;
        uint32_t const reserved_16 : 13;
        uint32_t       gc5c1 : 1;
        uint32_t       gc5c2 : 1;
        uint32_t       gc5c3 : 1;
    };
    uint32_t bits;
} TIM1_ccr5_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccr5_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       ccr6 : 16;
        uint32_t const reserved_16 : 16;
    };
    uint32_t bits;
} TIM1_ccr6_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_ccr6_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       bkine : 1;
        uint32_t       bkcmp1e : 1;
        uint32_t       bkcmp2e : 1;
        uint32_t const reserved_03 : 6;
        uint32_t       bkinp : 1;
        uint32_t       bkcmp1p : 1;
        uint32_t       bkcmp2p : 1;
        uint32_t const reserved_12 : 2;
        uint32_t       etrsel : 4;
        uint32_t const reserved_18 : 14;
    };
    uint32_t bits;
} TIM1_af1_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_af1_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       bk2ine : 1;
        uint32_t       bk2cmp1e : 1;
        uint32_t       bk2cmp2e : 1;
        uint32_t const reserved_03 : 6;
        uint32_t       bk2inp : 1;
        uint32_t       bk2cmp1p : 1;
        uint32_t       bk2cmp2p : 1;
        uint32_t const reserved_12 : 20;
    };
    uint32_t bits;
} TIM1_af2_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_af2_t, sizeof(uint32_t));

typedef union {
    struct {
        uint32_t       ti1sel : 4;
        uint32_t const reserved_04 : 4;
        uint32_t       ti2sel : 4;
        uint32_t const reserved_12 : 4;
        uint32_t       ti3sel : 4;
        uint32_t const reserved_20 : 4;
        uint32_t       ti4sel : 4;
        uint32_t const reserved_28 : 4;
    };
    uint32_t bits;
} TIM1_tisel_t;
STATIC_ASSERT_TYPE_SIZE(TIM1_tisel_t, sizeof(uint32_t));

typedef struct {
    TIM1_cr1_t volatile cr1;
    TIM1_cr2_t volatile cr2;
    TIM1_smcr_t volatile smcr;
    TIM1_dier_t volatile dier;
    TIM1_sr_t volatile sr;
    TIM1_egr_t volatile egr;
    TIM1_ccmr1_output_t volatile ccmr1_output;
    TIM1_ccmr1_input_t volatile ccmr1_input;
    TIM1_ccmr2_output_t volatile ccmr2_output;
    TIM1_ccmr2_input_t volatile ccmr2_input;
    TIM1_ccer_t volatile ccer;
    TIM1_cnt_t volatile cnt;
    TIM1_psc_t volatile psc;
    TIM1_arr_t volatile arr;
    TIM1_rcr_t volatile rcr;
    TIM1_ccr1_t volatile ccr1;
    TIM1_ccr2_t volatile ccr2;
    TIM1_ccr3_t volatile ccr3;
    TIM1_ccr4_t volatile ccr4;
    TIM1_bdtr_t volatile bdtr;
    TIM1_dcr_t volatile dcr;
    TIM1_dmar_t volatile dmar;
    TIM1_or1_t volatile or1;
    TIM1_ccmr3_output_t volatile ccmr3_output;
    TIM1_ccr5_t volatile ccr5;
    TIM1_ccr6_t volatile ccr6;
    TIM1_af1_t volatile af1;
    TIM1_af2_t volatile af2;
    TIM1_tisel_t volatile tisel;
} TIM1_peripheral_registers_t;
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CR1, 0x00);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CR2, 0x04);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, SMCR, 0x08);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, DIER, 0x0C);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, SR, 0x10);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, EGR, 0x14);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCMR1_Output, 0x18);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCMR1_Input, 0x18);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCMR2_Output, 0x1C);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCMR2_Input, 0x1C);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCER, 0x20);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CNT, 0x24);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, PSC, 0x28);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, ARR, 0x2C);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, RCR, 0x30);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCR1, 0x34);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCR2, 0x38);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCR3, 0x3C);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCR4, 0x40);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, BDTR, 0x44);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, DCR, 0x48);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, DMAR, 0x4C);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, OR1, 0x50);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCMR3_Output, 0x54);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCR5, 0x58);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, CCR6, 0x5C);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, AF1, 0x60);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, AF2, 0x64);
STATIC_ASSERT_MEMBER_OFFSET(TIM1_peripheral_registers_t, TISEL, 0x68);

#ifdef __cplusplus
}
#endif
#endif // STM_TIMER1_H_
